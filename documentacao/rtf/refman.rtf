{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s6\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs12\cgrid \sbasedon0 \snext0 heading 6;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\*\listtable
{\list\listtemplateid1
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8662 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid1}
{\list\listtemplateid2
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid2}
{\list\listtemplateid3
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid3}
}
{\listoverridetable
{\listoverride\listid1\listoverridecount0\ls1}
{\listoverride\listid2\listoverridecount0\ls2}
{\listoverride\listid3\listoverridecount0\ls3}
}
{\info 
{\title {\comment documentacao  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
4.0 \par
}}documentacao}
{\comment Gerado por doxygen 1.13.2.}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt documentacao}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Vers\'E3o 4.0\par\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Sum\'E1rio\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice das Estruturas de Dados\par \pard\plain 
{\tc \v \'CDndice das Estruturas de Dados}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Estruturas de Dados\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Aqui est\'E3o as estruturas de dados, uni\'F5es e suas respectivas descri\'E7\'F5es:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b Fila} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Item} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Lista} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b node_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice dos Arquivos\par \pard\plain 
{\tc \v \'CDndice dos Arquivos}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lista de Arquivos\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Esta \'E9 a lista de todos os arquivos e suas respectivas descri\'E7\'F5es:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b C:/Users/Vinicius Souza/Downloads/projeto-ED/{\b lista.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Vinicius Souza/Downloads/projeto-ED/{\b lista.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Vinicius Souza/Downloads/projeto-ED/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Estruturas{\tc \v Estruturas}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura Fila\par \pard\plain 
{\tc\tcl2 \v Fila}
{\xe \v Fila}
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
\par
{
{\f2 #include <lista.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Campos de Dados\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Item} * {\b itens}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ini}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b fim}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned {\b capacidade}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned {\b size}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Campos\par
\pard\plain 
{\xe \v capacidade\:Fila}
{\xe \v Fila\:capacidade}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned capacidade}}
\par
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v fim\:Fila}
{\xe \v Fila\:fim}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int fim}}
\par
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ini\:Fila}
{\xe \v Fila\:ini}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ini}}
\par
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v itens\:Fila}
{\xe \v Fila\:itens}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Item}* itens}}
\par
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v size\:Fila}
{\xe \v Fila\:size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned size}}
\par
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/Vinicius Souza/Downloads/projeto-ED/{\b lista.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura Item\par \pard\plain 
{\tc\tcl2 \v Item}
{\xe \v Item}
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
\par
{
{\f2 #include <lista.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Campos de Dados\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b T} {\b task}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b H} {\b time} [2]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Campos\par
\pard\plain 
{\xe \v task\:Item}
{\xe \v Item\:task}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b T} task}}
\par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v time\:Item}
{\xe \v Item\:time}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b H} time[2]}}
\par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/Vinicius Souza/Downloads/projeto-ED/{\b lista.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura Lista\par \pard\plain 
{\tc\tcl2 \v Lista}
{\xe \v Lista}
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
\par
{
{\f2 #include <lista.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Campos de Dados\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Node} * {\b sent}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned {\b size}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Campos\par
\pard\plain 
{\xe \v sent\:Lista}
{\xe \v Lista\:sent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Node}* sent}}
\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v size\:Lista}
{\xe \v Lista\:size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned size}}
\par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/Vinicius Souza/Downloads/projeto-ED/{\b lista.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura node_\par \pard\plain 
{\tc\tcl2 \v node_}
{\xe \v node_}
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
\par
{
{\f2 #include <lista.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Campos de Dados\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b T} {\b task}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b H} {\b time} [2]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b node_} * {\b prox}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b node_} * {\b ant}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Campos\par
\pard\plain 
{\xe \v ant\:node_}
{\xe \v node_\:ant}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b node_}* ant}}
\par
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v prox\:node_}
{\xe \v node_\:prox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b node_}* prox}}
\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v task\:node_}
{\xe \v node_\:task}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b T} task}}
\par
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v time\:node_}
{\xe \v node_\:time}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b H} time[2]}}
\par
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/Vinicius Souza/Downloads/projeto-ED/{\b lista.h}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Arquivos{\tc \v Arquivos}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo C:/Users/Vinicius Souza/Downloads/projeto-ED/lista.c\par \pard\plain 
{\tc\tcl2 \v C:/Users/Vinicius Souza/Downloads/projeto-ED/lista.c}
{\xe \v C:/Users/Vinicius Souza/Downloads/projeto-ED/lista.c}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdlib.h>}\par
{\f2 #include <stdio.h>}\par
{\f2 #include "lista.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b criarLista} ({\b Lista} *l)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b deletarLista} ({\b Lista} *l)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b listaVazia} ({\b Lista} *l)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserirI} ({\b Lista} *l, {\b T} task, {\b H} horas, {\b H} minutos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserirF} ({\b Lista} *l, {\b T} task, {\b H} horas, {\b H} minutos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b removerI} ({\b Lista} *l)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b removerF} ({\b Lista} *l)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b removerM} ({\b Lista} *l, unsigned n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Item} {\b copiarItem} ({\b Lista} *l, unsigned n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b criarFila} ({\b Fila} *f, int tam)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b filaVazia} ({\b Fila} *f)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b filaCheia} ({\b Fila} *f)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b redimensionarFila} ({\b Fila} *f)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b enfileirar} ({\b Fila} *f, {\b T} new_task, {\b H} horas, {\b H} minutos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Item} {\b desenfileirar} ({\b Fila} *f)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b imprimeFila} ({\b Fila} *f)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b esvaziarFila} ({\b Fila} *f, short n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b destruirFila} ({\b Fila} *f)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v copiarItem\:lista.c}
{\xe \v lista.c\:copiarItem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Item} copiarItem ({\b Lista} * l, unsigned n)}}
\par
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 95                                       \{\par
96     Node *temp = l->sent->prox;\par
97     {\cf19 for} ({\cf18 unsigned} i = 1; i < n; i++) \{\par
98         temp = temp->prox;\par
99     \}\par
100     Item copy;\par
101     {\cf20 // Aqui, usamos a mesma string}\par
102     copy.task = temp->task;\par
103     copy.time[0] = temp->time[0];\par
104     copy.time[1] = temp->time[1];\par
105     {\cf19 return} copy;\par
106 \}\par
}
}
{\xe \v criarFila\:lista.c}
{\xe \v lista.c\:criarFila}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void criarFila ({\b Fila} * f, int tam)}}
\par
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 110                                  \{\par
111     f->itens = (Item*)malloc(tam * {\cf17 sizeof}(Item));\par
112     f->ini = 0;\par
113     f->fim = -1;\par
114     f->capacidade = tam;\par
115     f->size = 0;\par
116 \}\par
}
}
{\xe \v criarLista\:lista.c}
{\xe \v lista.c\:criarLista}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void criarLista ({\b Lista} * l)}}
\par
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5                           \{\par
6     Node *n = (point)malloc({\cf17 sizeof}(Node));  {\cf20 // Aloca\'E7\'E3o de um ponteiro para o primeiro n\'F3 (sentinela)}\par
7     l->sent = n;                            {\cf20 // Define o primeiro n\'F3 "n" como sentinela}\par
8     n->prox = n->ant = n;                   {\cf20 // Atribui o pr\'F3prio sentinela a seus ponteiros de anterior e de pr\'F3ximo}\par
9     l->size = 0;                            {\cf20 // Define como 0 o tamanho da lista}\par
10 \}\par
}
}
{\xe \v deletarLista\:lista.c}
{\xe \v lista.c\:deletarLista}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void deletarLista ({\b Lista} * l)}}
\par
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 12                            \{\par
13     {\cf19 while}(!listaVazia(l))\{\par
14         removerI(l);        {\cf20 // Enquanto a lista n\'E3o estiver vazia, remove cada um de seus elementos}\par
15     \}\par
16     free(l->sent);          {\cf20 // Libera a mem\'F3ria que armazenava o sentinela, o \'FAltimo n\'F3 restante}\par
17 \}\par
}
}
{\xe \v desenfileirar\:lista.c}
{\xe \v lista.c\:desenfileirar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Item} desenfileirar ({\b Fila} * f)}}
\par
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 145                             \{\par
146     Item temp;\par
147     {\cf19 if} (filaVazia(f)) \{\par
148         temp.task = {\cf22 "Fila vazia."};\par
149         {\cf19 return} temp;\par
150     \}\par
151     temp = f->itens[f->ini];\par
152     f->ini = (f->ini + 1) % f->capacidade;\par
153     f->size--;\par
154     {\cf19 return} temp;\par
155 \}\par
}
}
{\xe \v destruirFila\:lista.c}
{\xe \v lista.c\:destruirFila}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void destruirFila ({\b Fila} * f)}}
\par
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 177                            \{\par
178     free(f->itens);\par
179     {\cf20 // Caso f tenha sido alocado dinamicamente, libere-o tamb\'E9m.}\par
180 \}\par
}
}
{\xe \v enfileirar\:lista.c}
{\xe \v lista.c\:enfileirar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void enfileirar ({\b Fila} * f, {\b T} new_task, {\b H} horas, {\b H} minutos)}}
\par
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 135                                                          \{\par
136     {\cf19 if} (filaCheia(f))\par
137         redimensionarFila(f);\par
138     f->fim = (f->fim + 1) % f->capacidade;\par
139     f->itens[f->fim].task = new_task;\par
140     f->itens[f->fim].time[0] = horas;\par
141     f->itens[f->fim].time[1] = minutos;\par
142     f->size++;\par
143 \}\par
}
}
{\xe \v esvaziarFila\:lista.c}
{\xe \v lista.c\:esvaziarFila}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void esvaziarFila ({\b Fila} * f, short n)}}
\par
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 166                                     \{\par
167     {\cf19 if} (filaVazia(f))\par
168         {\cf19 return};\par
169     {\cf19 while} (!filaVazia(f)) \{\par
170         Item itm = desenfileirar(f);\par
171         {\cf19 if} (n) \{\par
172             printf({\cf22 "%s %02hd:%02hd\\n"}, itm.task, itm.time[0], itm.time[1]);\par
173         \}\par
174     \}\par
175 \}\par
}
}
{\xe \v filaCheia\:lista.c}
{\xe \v lista.c\:filaCheia}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int filaCheia ({\b Fila} * f)}}
\par
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 122                        \{\par
123     {\cf19 return} (f->size == f->capacidade);\par
124 \}\par
}
}
{\xe \v filaVazia\:lista.c}
{\xe \v lista.c\:filaVazia}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int filaVazia ({\b Fila} * f)}}
\par
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 118                        \{\par
119     {\cf19 return} (f->size == 0);\par
120 \}\par
}
}
{\xe \v imprimeFila\:lista.c}
{\xe \v lista.c\:imprimeFila}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void imprimeFila ({\b Fila} * f)}}
\par
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 157                           \{\par
158     {\cf19 if} (filaVazia(f))\par
159         {\cf19 return};\par
160     {\cf19 for} ({\cf18 int} i = 0; i < f->size; i++) \{\par
161         {\cf18 int} idx = (f->ini + i) % f->capacidade;\par
162         printf({\cf22 "%s %02hd:%02hd\\n"}, f->itens[idx].task, f->itens[idx].time[0], f->itens[idx].time[1]);\par
163     \}\par
164 \}\par
}
}
{\xe \v inserirF\:lista.c}
{\xe \v lista.c\:inserirF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void inserirF ({\b Lista} * l, {\b T} task, {\b H} horas, {\b H} minutos)}}
\par
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 37                                                    \{\par
38     Node *novo = (point)malloc({\cf17 sizeof}(Node));   {\cf20 // Aloca espa\'E7o na mem\'F3ria para um novo n\'F3}\par
39     novo->task = task;                          {\cf20 // Atribui o dado do par\'E2metro ao conte\'FAdo do n\'F3}\par
40     novo->time[0] = horas;\par
41     novo->time[1] = minutos;\par
42     novo->prox = l->sent;                       {\cf20 // Pr\'F3ximo aponta para o sentinela}\par
43     novo->ant = l->sent->ant;                   {\cf20 // Anterior aponta para o, at\'E9 ent\'E3o, \'FAltiimo elemento da lista}\par
44     novo->ant->prox = novo;                     {\cf20 // Ponteiro "pr\'F3ximo" do antigo \'FAltimo elemento, aponta para o novo n\'F3}\par
45     l->sent->ant = novo;                        {\cf20 // Atribui o novo n\'F3 ao ponteiro "anterior" do sentinela }\par
46     l->size++;                                  {\cf20 // Incrementa o tamanho da lista}\par
47 \}\par
}
}
{\xe \v inserirI\:lista.c}
{\xe \v lista.c\:inserirI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void inserirI ({\b Lista} * l, {\b T} task, {\b H} horas, {\b H} minutos)}}
\par
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 24                                                    \{\par
25     Node *novo = (point)malloc({\cf17 sizeof}(Node));   {\cf20 // Aloca espa\'E7o na mem\'F3ria para um novo n\'F3}\par
26     novo->task = task;                          {\cf20 // Atribui o dado do par\'E2metro ao conte\'FAdo do n\'F3}\par
27     novo->time[0] = horas;\par
28     novo->time[1] = minutos;\par
29     novo->prox = l->sent->prox;                 {\cf20 // Pr\'F3ximo aponta para o, at\'E9 ent\'E3o, primeiro elemento da lista}\par
30     novo->ant = l->sent;                        {\cf20 // Anterior aponta para o sentinela}\par
31     novo->prox->ant = novo;                     {\cf20 // Ponteiro "anterior" do antigo primeiro elemento, aponta para o novo n\'F3}\par
32     l->sent->prox = novo;                       {\cf20 // Atribui o novo n\'F3 ao ponteiro "pr\'F3ximo" do sentinela }\par
33     l->size++;                                  {\cf20 // Incrementa o tamanho da lista}\par
34 \}\par
}
}
{\xe \v listaVazia\:lista.c}
{\xe \v lista.c\:listaVazia}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int listaVazia ({\b Lista} * l)}}
\par
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 19                         \{\par
20     {\cf19 return} (l->sent->prox == l->sent);      {\cf20 // Retorna 1 se o ponteiro de pr\'F3ximo do sentinela apontar para ele mesmo (lista vazia)}\par
21 \}\par
}
}
{\xe \v redimensionarFila\:lista.c}
{\xe \v lista.c\:redimensionarFila}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void redimensionarFila ({\b Fila} * f)}}
\par
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 126                                 \{\par
127     f->capacidade *= 2;\par
128     f->itens = (Item*)realloc(f->itens, f->capacidade * {\cf17 sizeof}(Item));\par
129     {\cf19 if} (f->itens == NULL) \{\par
130         printf({\cf22 "Erro ao realocar mem\'F3ria.\\n"});\par
131         {\cf19 return};\par
132     \}\par
133 \}\par
}
}
{\xe \v removerF\:lista.c}
{\xe \v lista.c\:removerF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void removerF ({\b Lista} * l)}}
\par
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 62                        \{\par
63     Node *temp = l->sent->ant;             {\cf20 // Define o elemento a ser removido (\'FAltimo)}\par
64     {\cf19 if}(temp != l->sent)\{                   {\cf20 // Evita a remo\'E7\'E3o do n\'F3 sentinela}\par
65         temp->ant->prox = temp->prox;      {\cf20 // Ajusta o ponteiro "pr\'F3ximo" do n\'F3 anterior, que apontar\'E1 para o elemento seguinte}\par
66         temp->prox->ant = temp->ant;       {\cf20 // Ajusta o ponteiro "anterior" do pr\'F3ximo n\'F3, que apontar\'E1 para o novo anterior}\par
67         free(temp->task);                  {\cf20 // Libera a mem\'F3ria da string}\par
68         free(temp);                        {\cf20 // Libera a mem\'F3ria alocada}\par
69         l->size--;                         {\cf20 // Decrementa o tamanho da lista}\par
70     \}\par
71 \}\par
}
}
{\xe \v removerI\:lista.c}
{\xe \v lista.c\:removerI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void removerI ({\b Lista} * l)}}
\par
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 50                        \{\par
51     Node *temp = l->sent->prox;             {\cf20 // Define o elemento a ser removido (primeiro)}\par
52     {\cf19 if}(temp != l->sent)\{                    {\cf20 // Evita a remo\'E7\'E3o do n\'F3 sentinela}\par
53         temp->ant->prox = temp->prox;       {\cf20 // Ajusta o ponteiro "pr\'F3ximo" do n\'F3 anterior, que apontar\'E1 para o elemento seguinte}\par
54         temp->prox->ant = temp->ant;        {\cf20 // Ajusta o ponteiro "anterior" do pr\'F3ximo n\'F3, que apontar\'E1 para o novo anterior}\par
55         free(temp->task);                   {\cf20 // Libera a mem\'F3ria da string}\par
56         free(temp);                         {\cf20 // Libera a mem\'F3ria alocada}\par
57         l->size--;                          {\cf20 // Decrementa o tamanho da lista}\par
58     \}\par
59 \}\par
}
}
{\xe \v removerM\:lista.c}
{\xe \v lista.c\:removerM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void removerM ({\b Lista} * l, unsigned n)}}
\par
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 73                                    \{\par
74     {\cf19 if}(!n || n > l->size) {\cf20 // Finaliza a fun\'E7\'E3o caso n seja zero ou maior que o tamanho da lista}\par
75         {\cf19 return};\par
76     Node *temp = l->sent;\par
77 \par
78     {\cf20 // Se o elemento escolhido estiver antes ou na metade da lista a itera\'E7\'E3o segue no sentido do ponteiro prox,}\par
79     {\cf20 // e se estiver depois da metade a itera\'E7\'E3o segue pelo sentido do ponteiro ant}\par
80     {\cf19 if}(n <= l->size / 2)\par
81         {\cf19 for}({\cf18 unsigned} i = 1; i <= n; i++)\{\par
82             temp = temp->prox;\par
83         \}\par
84     {\cf19 else}\par
85         {\cf19 for}({\cf18 unsigned} i = 0; i <= (l->size - n); i++)\{ {\cf20 // i come\'E7a em zero para fazer mais uma itera\'E7\'E3o}\par
86             temp = temp->ant;\par
87         \}\par
88 \par
89     temp->ant->prox = temp->prox;      {\cf20 // Ajusta o ponteiro "pr\'F3ximo" do n\'F3 anterior, que apontar\'E1 para o elemento seguinte}\par
90     temp->prox->ant = temp->ant;       {\cf20 // Ajusta o ponteiro "anterior" do pr\'F3ximo n\'F3, que apontar\'E1 para o novo anterior}\par
91     free(temp);                        {\cf20 // Libera a mem\'F3ria alocada}\par
92     l->size--;\par
93 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo C:/Users/Vinicius Souza/Downloads/projeto-ED/lista.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/Vinicius Souza/Downloads/projeto-ED/lista.h}
{\xe \v C:/Users/Vinicius Souza/Downloads/projeto-ED/lista.h}
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Estruturas de Dados\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b node_}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Lista}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Item}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Fila}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es de Tipos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef char * {\b T}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef short {\b H}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b node_} {\b Node}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\b Node} * {\b point}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b criarLista} ({\b Lista} *l)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b deletarLista} ({\b Lista} *l)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b listaVazia} ({\b Lista} *l)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserirI} ({\b Lista} *l, {\b T} task, {\b H} horas, {\b H} minutos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserirF} ({\b Lista} *l, {\b T} task, {\b H} horas, {\b H} minutos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b removerI} ({\b Lista} *l)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b removerF} ({\b Lista} *l)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b removerM} ({\b Lista} *l, unsigned n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Item} {\b copiarItem} ({\b Lista} *l, unsigned n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b criarFila} ({\b Fila} *f, int tam)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b filaVazia} ({\b Fila} *f)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b filaCheia} ({\b Fila} *f)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b redimensionarFila} ({\b Fila} *f)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b enfileirar} ({\b Fila} *f, {\b T} new_task, {\b H} horas, {\b H} minutos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Item} {\b desenfileirar} ({\b Fila} *f)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b imprimeFila} ({\b Fila} *f)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b esvaziarFila} ({\b Fila} *f, short n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b destruirFila} ({\b Fila} *f)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es dos tipos\par
\pard\plain 
{\xe \v H\:lista.h}
{\xe \v lista.h\:H}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef short {\b H}}}
\par
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Node\:lista.h}
{\xe \v lista.h\:Node}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b node_} {\b Node}}}
\par
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v point\:lista.h}
{\xe \v lista.h\:point}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef {\b Node}* {\b point}}}
\par
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v T\:lista.h}
{\xe \v lista.h\:T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef char* {\b T}}}
\par
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v copiarItem\:lista.h}
{\xe \v lista.h\:copiarItem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Item} copiarItem ({\b Lista} * l, unsigned n)}}
\par
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 95                                       \{\par
96     Node *temp = l->sent->prox;\par
97     {\cf19 for} ({\cf18 unsigned} i = 1; i < n; i++) \{\par
98         temp = temp->prox;\par
99     \}\par
100     Item copy;\par
101     {\cf20 // Aqui, usamos a mesma string}\par
102     copy.task = temp->task;\par
103     copy.time[0] = temp->time[0];\par
104     copy.time[1] = temp->time[1];\par
105     {\cf19 return} copy;\par
106 \}\par
}
}
{\xe \v criarFila\:lista.h}
{\xe \v lista.h\:criarFila}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void criarFila ({\b Fila} * f, int tam)}}
\par
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 110                                  \{\par
111     f->itens = (Item*)malloc(tam * {\cf17 sizeof}(Item));\par
112     f->ini = 0;\par
113     f->fim = -1;\par
114     f->capacidade = tam;\par
115     f->size = 0;\par
116 \}\par
}
}
{\xe \v criarLista\:lista.h}
{\xe \v lista.h\:criarLista}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void criarLista ({\b Lista} * l)}}
\par
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5                           \{\par
6     Node *n = (point)malloc({\cf17 sizeof}(Node));  {\cf20 // Aloca\'E7\'E3o de um ponteiro para o primeiro n\'F3 (sentinela)}\par
7     l->sent = n;                            {\cf20 // Define o primeiro n\'F3 "n" como sentinela}\par
8     n->prox = n->ant = n;                   {\cf20 // Atribui o pr\'F3prio sentinela a seus ponteiros de anterior e de pr\'F3ximo}\par
9     l->size = 0;                            {\cf20 // Define como 0 o tamanho da lista}\par
10 \}\par
}
}
{\xe \v deletarLista\:lista.h}
{\xe \v lista.h\:deletarLista}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void deletarLista ({\b Lista} * l)}}
\par
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 12                            \{\par
13     {\cf19 while}(!listaVazia(l))\{\par
14         removerI(l);        {\cf20 // Enquanto a lista n\'E3o estiver vazia, remove cada um de seus elementos}\par
15     \}\par
16     free(l->sent);          {\cf20 // Libera a mem\'F3ria que armazenava o sentinela, o \'FAltimo n\'F3 restante}\par
17 \}\par
}
}
{\xe \v desenfileirar\:lista.h}
{\xe \v lista.h\:desenfileirar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Item} desenfileirar ({\b Fila} * f)}}
\par
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 145                             \{\par
146     Item temp;\par
147     {\cf19 if} (filaVazia(f)) \{\par
148         temp.task = {\cf22 "Fila vazia."};\par
149         {\cf19 return} temp;\par
150     \}\par
151     temp = f->itens[f->ini];\par
152     f->ini = (f->ini + 1) % f->capacidade;\par
153     f->size--;\par
154     {\cf19 return} temp;\par
155 \}\par
}
}
{\xe \v destruirFila\:lista.h}
{\xe \v lista.h\:destruirFila}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void destruirFila ({\b Fila} * f)}}
\par
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 177                            \{\par
178     free(f->itens);\par
179     {\cf20 // Caso f tenha sido alocado dinamicamente, libere-o tamb\'E9m.}\par
180 \}\par
}
}
{\xe \v enfileirar\:lista.h}
{\xe \v lista.h\:enfileirar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void enfileirar ({\b Fila} * f, {\b T} new_task, {\b H} horas, {\b H} minutos)}}
\par
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 135                                                          \{\par
136     {\cf19 if} (filaCheia(f))\par
137         redimensionarFila(f);\par
138     f->fim = (f->fim + 1) % f->capacidade;\par
139     f->itens[f->fim].task = new_task;\par
140     f->itens[f->fim].time[0] = horas;\par
141     f->itens[f->fim].time[1] = minutos;\par
142     f->size++;\par
143 \}\par
}
}
{\xe \v esvaziarFila\:lista.h}
{\xe \v lista.h\:esvaziarFila}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void esvaziarFila ({\b Fila} * f, short n)}}
\par
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 166                                     \{\par
167     {\cf19 if} (filaVazia(f))\par
168         {\cf19 return};\par
169     {\cf19 while} (!filaVazia(f)) \{\par
170         Item itm = desenfileirar(f);\par
171         {\cf19 if} (n) \{\par
172             printf({\cf22 "%s %02hd:%02hd\\n"}, itm.task, itm.time[0], itm.time[1]);\par
173         \}\par
174     \}\par
175 \}\par
}
}
{\xe \v filaCheia\:lista.h}
{\xe \v lista.h\:filaCheia}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int filaCheia ({\b Fila} * f)}}
\par
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 122                        \{\par
123     {\cf19 return} (f->size == f->capacidade);\par
124 \}\par
}
}
{\xe \v filaVazia\:lista.h}
{\xe \v lista.h\:filaVazia}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int filaVazia ({\b Fila} * f)}}
\par
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 118                        \{\par
119     {\cf19 return} (f->size == 0);\par
120 \}\par
}
}
{\xe \v imprimeFila\:lista.h}
{\xe \v lista.h\:imprimeFila}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void imprimeFila ({\b Fila} * f)}}
\par
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 157                           \{\par
158     {\cf19 if} (filaVazia(f))\par
159         {\cf19 return};\par
160     {\cf19 for} ({\cf18 int} i = 0; i < f->size; i++) \{\par
161         {\cf18 int} idx = (f->ini + i) % f->capacidade;\par
162         printf({\cf22 "%s %02hd:%02hd\\n"}, f->itens[idx].task, f->itens[idx].time[0], f->itens[idx].time[1]);\par
163     \}\par
164 \}\par
}
}
{\xe \v inserirF\:lista.h}
{\xe \v lista.h\:inserirF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void inserirF ({\b Lista} * l, {\b T} task, {\b H} horas, {\b H} minutos)}}
\par
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 37                                                    \{\par
38     Node *novo = (point)malloc({\cf17 sizeof}(Node));   {\cf20 // Aloca espa\'E7o na mem\'F3ria para um novo n\'F3}\par
39     novo->task = task;                          {\cf20 // Atribui o dado do par\'E2metro ao conte\'FAdo do n\'F3}\par
40     novo->time[0] = horas;\par
41     novo->time[1] = minutos;\par
42     novo->prox = l->sent;                       {\cf20 // Pr\'F3ximo aponta para o sentinela}\par
43     novo->ant = l->sent->ant;                   {\cf20 // Anterior aponta para o, at\'E9 ent\'E3o, \'FAltiimo elemento da lista}\par
44     novo->ant->prox = novo;                     {\cf20 // Ponteiro "pr\'F3ximo" do antigo \'FAltimo elemento, aponta para o novo n\'F3}\par
45     l->sent->ant = novo;                        {\cf20 // Atribui o novo n\'F3 ao ponteiro "anterior" do sentinela }\par
46     l->size++;                                  {\cf20 // Incrementa o tamanho da lista}\par
47 \}\par
}
}
{\xe \v inserirI\:lista.h}
{\xe \v lista.h\:inserirI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void inserirI ({\b Lista} * l, {\b T} task, {\b H} horas, {\b H} minutos)}}
\par
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 24                                                    \{\par
25     Node *novo = (point)malloc({\cf17 sizeof}(Node));   {\cf20 // Aloca espa\'E7o na mem\'F3ria para um novo n\'F3}\par
26     novo->task = task;                          {\cf20 // Atribui o dado do par\'E2metro ao conte\'FAdo do n\'F3}\par
27     novo->time[0] = horas;\par
28     novo->time[1] = minutos;\par
29     novo->prox = l->sent->prox;                 {\cf20 // Pr\'F3ximo aponta para o, at\'E9 ent\'E3o, primeiro elemento da lista}\par
30     novo->ant = l->sent;                        {\cf20 // Anterior aponta para o sentinela}\par
31     novo->prox->ant = novo;                     {\cf20 // Ponteiro "anterior" do antigo primeiro elemento, aponta para o novo n\'F3}\par
32     l->sent->prox = novo;                       {\cf20 // Atribui o novo n\'F3 ao ponteiro "pr\'F3ximo" do sentinela }\par
33     l->size++;                                  {\cf20 // Incrementa o tamanho da lista}\par
34 \}\par
}
}
{\xe \v listaVazia\:lista.h}
{\xe \v lista.h\:listaVazia}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int listaVazia ({\b Lista} * l)}}
\par
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 19                         \{\par
20     {\cf19 return} (l->sent->prox == l->sent);      {\cf20 // Retorna 1 se o ponteiro de pr\'F3ximo do sentinela apontar para ele mesmo (lista vazia)}\par
21 \}\par
}
}
{\xe \v redimensionarFila\:lista.h}
{\xe \v lista.h\:redimensionarFila}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void redimensionarFila ({\b Fila} * f)}}
\par
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 126                                 \{\par
127     f->capacidade *= 2;\par
128     f->itens = (Item*)realloc(f->itens, f->capacidade * {\cf17 sizeof}(Item));\par
129     {\cf19 if} (f->itens == NULL) \{\par
130         printf({\cf22 "Erro ao realocar mem\'F3ria.\\n"});\par
131         {\cf19 return};\par
132     \}\par
133 \}\par
}
}
{\xe \v removerF\:lista.h}
{\xe \v lista.h\:removerF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void removerF ({\b Lista} * l)}}
\par
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 62                        \{\par
63     Node *temp = l->sent->ant;             {\cf20 // Define o elemento a ser removido (\'FAltimo)}\par
64     {\cf19 if}(temp != l->sent)\{                   {\cf20 // Evita a remo\'E7\'E3o do n\'F3 sentinela}\par
65         temp->ant->prox = temp->prox;      {\cf20 // Ajusta o ponteiro "pr\'F3ximo" do n\'F3 anterior, que apontar\'E1 para o elemento seguinte}\par
66         temp->prox->ant = temp->ant;       {\cf20 // Ajusta o ponteiro "anterior" do pr\'F3ximo n\'F3, que apontar\'E1 para o novo anterior}\par
67         free(temp->task);                  {\cf20 // Libera a mem\'F3ria da string}\par
68         free(temp);                        {\cf20 // Libera a mem\'F3ria alocada}\par
69         l->size--;                         {\cf20 // Decrementa o tamanho da lista}\par
70     \}\par
71 \}\par
}
}
{\xe \v removerI\:lista.h}
{\xe \v lista.h\:removerI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void removerI ({\b Lista} * l)}}
\par
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 50                        \{\par
51     Node *temp = l->sent->prox;             {\cf20 // Define o elemento a ser removido (primeiro)}\par
52     {\cf19 if}(temp != l->sent)\{                    {\cf20 // Evita a remo\'E7\'E3o do n\'F3 sentinela}\par
53         temp->ant->prox = temp->prox;       {\cf20 // Ajusta o ponteiro "pr\'F3ximo" do n\'F3 anterior, que apontar\'E1 para o elemento seguinte}\par
54         temp->prox->ant = temp->ant;        {\cf20 // Ajusta o ponteiro "anterior" do pr\'F3ximo n\'F3, que apontar\'E1 para o novo anterior}\par
55         free(temp->task);                   {\cf20 // Libera a mem\'F3ria da string}\par
56         free(temp);                         {\cf20 // Libera a mem\'F3ria alocada}\par
57         l->size--;                          {\cf20 // Decrementa o tamanho da lista}\par
58     \}\par
59 \}\par
}
}
{\xe \v removerM\:lista.h}
{\xe \v lista.h\:removerM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void removerM ({\b Lista} * l, unsigned n)}}
\par
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 73                                    \{\par
74     {\cf19 if}(!n || n > l->size) {\cf20 // Finaliza a fun\'E7\'E3o caso n seja zero ou maior que o tamanho da lista}\par
75         {\cf19 return};\par
76     Node *temp = l->sent;\par
77 \par
78     {\cf20 // Se o elemento escolhido estiver antes ou na metade da lista a itera\'E7\'E3o segue no sentido do ponteiro prox,}\par
79     {\cf20 // e se estiver depois da metade a itera\'E7\'E3o segue pelo sentido do ponteiro ant}\par
80     {\cf19 if}(n <= l->size / 2)\par
81         {\cf19 for}({\cf18 unsigned} i = 1; i <= n; i++)\{\par
82             temp = temp->prox;\par
83         \}\par
84     {\cf19 else}\par
85         {\cf19 for}({\cf18 unsigned} i = 0; i <= (l->size - n); i++)\{ {\cf20 // i come\'E7a em zero para fazer mais uma itera\'E7\'E3o}\par
86             temp = temp->ant;\par
87         \}\par
88 \par
89     temp->ant->prox = temp->prox;      {\cf20 // Ajusta o ponteiro "pr\'F3ximo" do n\'F3 anterior, que apontar\'E1 para o elemento seguinte}\par
90     temp->prox->ant = temp->ant;       {\cf20 // Ajusta o ponteiro "anterior" do pr\'F3ximo n\'F3, que apontar\'E1 para o novo anterior}\par
91     free(temp);                        {\cf20 // Libera a mem\'F3ria alocada}\par
92     l->size--;\par
93 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lista.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/Vinicius Souza/Downloads/projeto-ED/lista.h}
{\xe \v C:/Users/Vinicius Souza/Downloads/projeto-ED/lista.h}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef LISTA_H}\par
2 {\cf21 #define LISTA_H}\par
3 \par
4 {\cf20 // Defini\'E7\'E3o do tipo de dados, no caso, T como um ponteiro para char}\par
5 {\cf17 typedef} {\cf18 char}* T;\par
6 {\cf20 // Defini\'E7\'E3o do tipo de dados H, inteiro usado para manipular hor\'E1rios}\par
7 {\cf17 typedef} {\cf18 short} H;\par
8 \par
9 {\cf20 // Estrutura do n\'F3 da lista}\par
10 {\cf17 typedef} {\cf17 struct }node_ \{\par
11     T task;              {\cf20 // Descri\'E7\'E3o da tarefa}\par
12     H time[2];           {\cf20 // Hor\'E1rio: [0]=hora, [1]=minuto}\par
13     {\cf17 struct }node_ *prox;  {\cf20 // Ponteiro para o pr\'F3ximo elemento}\par
14     {\cf17 struct }node_ *ant;   {\cf20 // Ponteiro para o elemento anterior}\par
15 \}Node;\par
16 \par
17 {\cf17 typedef} Node* point;\par
18 \par
19 {\cf20 // Estrutura da lista com sentinela}\par
20 {\cf17 typedef} {\cf17 struct }\{\par
21     Node *sent;    {\cf20 // Ponteiro para o n\'F3 sentinela}\par
22     {\cf18 unsigned} size; {\cf20 // Tamanho da lista}\par
23 \} Lista;\par
24 \par
25 {\cf20 // Estrutura do item (para a fila de tarefas conclu\'EDdas)}\par
26 {\cf17 typedef} {\cf17 struct }\{\par
27     T task;    {\cf20 // Descri\'E7\'E3o da tarefa}\par
28     H time[2]; {\cf20 // Hor\'E1rio: [0]=hora, [1]=minuto}\par
29 \} Item;\par
30 \par
31 {\cf20 // Estrutura da fila}\par
32 {\cf17 typedef} {\cf17 struct }\{\par
33     Item *itens;        {\cf20 // Vetor de itens}\par
34     {\cf18 int} ini;            {\cf20 // \'CDndice do in\'EDcio da fila}\par
35     {\cf18 int} fim;            {\cf20 // \'CDndice do fim da fila}\par
36     {\cf18 unsigned} capacidade; {\cf20 // Capacidade m\'E1xima}\par
37     {\cf18 unsigned} size;      {\cf20 // N\'FAmero atual de itens}\par
38 \} Fila;\par
39 \par
40 {\cf20 // Fun\'E7\'E3o para criar uma lista}\par
41 {\cf18 void} criarLista(Lista *l);\par
42 \par
43 {\cf20 // Fun\'E7\'E3o para deletar uma lista}\par
44 {\cf18 void} deletarLista(Lista *l);\par
45 \par
46 {\cf20 // Fun\'E7\'E3o para verificar se a lista est\'E1 vazia}\par
47 {\cf18 int} listaVazia(Lista *l);\par
48 \par
49 {\cf20 // Fun\'E7\'E3o para inserir um elemento no in\'EDcio da lista}\par
50 {\cf18 void} inserirI(Lista *l, T task, H horas, H minutos);\par
51 \par
52 {\cf20 // Fun\'E7\'E3o para inserir um elemento no final da lista}\par
53 {\cf18 void} inserirF(Lista *l, T task, H horas, H minutos);\par
54 \par
55 {\cf20 // Fun\'E7\'E3o para remover um elemento do in\'EDcio da lista}\par
56 {\cf18 void} removerI(Lista *l);\par
57 \par
58 {\cf20 // Fun\'E7\'E3o para remover um elemento do final da lista}\par
59 {\cf18 void} removerF(Lista *l);\par
60 \par
61 {\cf20 // Fun\'E7\'E3o para remover um elemento do meio da lista}\par
62 {\cf18 void} removerM(Lista *l, {\cf18 unsigned} n);\par
63 \par
64 Item copiarItem(Lista *l, {\cf18 unsigned} n);\par
65 \par
66 {\cf20 // Prot\'F3tipos das fun\'E7\'F5es da fila}\par
67 {\cf18 void} criarFila(Fila *f, {\cf18 int} tam);\par
68 {\cf18 int} filaVazia(Fila *f);\par
69 {\cf18 int} filaCheia(Fila *f);\par
70 {\cf18 void} redimensionarFila(Fila *f);\par
71 {\cf18 void} enfileirar(Fila *f, T new_task, H horas, H minutos);\par
72 Item desenfileirar(Fila *f);\par
73 {\cf18 void} imprimeFila(Fila *f);\par
74 {\cf18 void} esvaziarFila(Fila *f, {\cf18 short} n);\par
75 {\cf18 void} destruirFila(Fila *f);\par
76 \par
77 {\cf21 #endif }{\cf20 // LISTA_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo C:/Users/Vinicius Souza/Downloads/projeto-ED/main.c\par \pard\plain 
{\tc\tcl2 \v C:/Users/Vinicius Souza/Downloads/projeto-ED/main.c}
{\xe \v C:/Users/Vinicius Souza/Downloads/projeto-ED/main.c}
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <gtk/gtk.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <stdio.h>}\par
{\f2 #include "lista.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mostrar_erro} (const gchar *mensagem)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b atualizar_lista_box} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b adicionar} (GtkWidget *widget, gpointer data)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b on_task_row_activated} (GtkListBox *box, GtkListBoxRow *row, gpointer user_data)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b on_ver_concluidas_clicked} (GtkWidget *widget, gpointer data)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b on_entrar_clicked} (GtkWidget *widget, gpointer data)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b on_voltar_clicked} (GtkWidget *widget, gpointer data)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Lista} {\b lista}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Fila} {\b fila}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
GtkWidget * {\b initial_window}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
GtkWidget * {\b main_window}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
GtkWidget * {\b entry_title}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
GtkWidget * {\b entry_task}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
GtkWidget * {\b entry_hour_minute}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
GtkWidget * {\b list_box}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v adicionar\:main.c}
{\xe \v main.c\:adicionar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void adicionar (GtkWidget * widget, gpointer data)}}
\par
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 55                                                  \{\par
56     {\cf17 const} gchar *title_text = gtk_entry_get_text(GTK_ENTRY(entry_title));\par
57     {\cf17 const} gchar *task_text = gtk_entry_get_text(GTK_ENTRY(entry_task));\par
58     {\cf17 const} gchar *time_str = gtk_entry_get_text(GTK_ENTRY(entry_hour_minute));\par
59 \par
60     {\cf19 if} (g_strcmp0(title_text, {\cf22 ""}) == 0) \{\par
61         mostrar_erro({\cf22 "Erro: O t\'EDtulo da tarefa n\'E3o pode estar vazio!"});\par
62         {\cf19 return};\par
63     \}\par
64     {\cf19 if} (g_strcmp0(task_text, {\cf22 ""}) == 0) \{\par
65         mostrar_erro({\cf22 "Erro: A descri\'E7\'E3o da tarefa n\'E3o pode estar vazia!"});\par
66         {\cf19 return};\par
67     \}\par
68     {\cf18 int} hour, minute;\par
69     {\cf19 if} (sscanf(time_str, {\cf22 "%d:%d"}, &hour, &minute) != 2 || hour < 0 || hour > 23 || minute < 0 || minute > 59) \{\par
70         mostrar_erro({\cf22 "Erro: Hora ou minuto inv\'E1lido! Use o formato HH:MM (ex: 14:30)."});\par
71         {\cf19 return};\par
72     \}\par
73 \par
74     {\cf20 // Concatena t\'EDtulo e descri\'E7\'E3o no formato "T\'EDtulo: Descri\'E7\'E3o"}\par
75     gchar *full_task = g_strdup_printf({\cf22 "%s: %s"}, title_text, task_text);\par
76     inserirF(&lista, full_task, hour, minute);\par
77     atualizar_lista_box();\par
78 \par
79     {\cf20 // Limpa os campos de entrada ap\'F3s adicionar a tarefa}\par
80     gtk_entry_set_text(GTK_ENTRY(entry_title), {\cf22 ""});\par
81     gtk_entry_set_text(GTK_ENTRY(entry_task), {\cf22 ""});\par
82     gtk_entry_set_text(GTK_ENTRY(entry_hour_minute), {\cf22 ""});\par
83 \}\par
}
}
{\xe \v atualizar_lista_box\:main.c}
{\xe \v main.c\:atualizar_lista_box}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void atualizar_lista_box ()}}
\par
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 27                            \{\par
28     {\cf20 // Remove todos os filhos atuais do list_box}\par
29     GList *children = gtk_container_get_children(GTK_CONTAINER(list_box));\par
30     {\cf19 for} (GList *iter = children; iter != NULL; iter = g_list_next(iter))\par
31         gtk_widget_destroy(GTK_WIDGET(iter->data));\par
32     g_list_free(children);\par
33 \par
34     {\cf20 // Percorre a lista de tarefas pendentes}\par
35     Node *temp = lista.sent->prox;\par
36     {\cf19 while} (temp != lista.sent) \{\par
37         {\cf20 // Considerando que a tarefa est\'E1 armazenada no formato "T\'EDtulo: Descri\'E7\'E3o",}\par
38         {\cf20 // separamos o t\'EDtulo (antes dos dois pontos)}\par
39         gchar **parts = g_strsplit(temp->task, {\cf22 ":"}, 2);\par
40         {\cf17 const} gchar *titulo = parts[0];\par
41 \par
42         {\cf20 // Cria um GtkListBoxRow e insere o t\'EDtulo}\par
43         GtkWidget *row = gtk_list_box_row_new();\par
44         GtkWidget *label = gtk_label_new(titulo);\par
45         gtk_container_add(GTK_CONTAINER(row), label);\par
46         gtk_list_box_insert(GTK_LIST_BOX(list_box), row, -1);\par
47         gtk_widget_show_all(row);\par
48 \par
49         g_strfreev(parts);\par
50         temp = temp->prox;\par
51     \}\par
52 \}\par
}
}
{\xe \v main\:main.c}
{\xe \v main.c\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int argc, char * argv[])}}
\par
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 176                                 \{\par
177     gtk_init(&argc, &argv);\par
178 \par
179     {\cf20 // Carrega o CSS (se houver)}\par
180     GtkCssProvider *cssProvider = gtk_css_provider_new();\par
181     gtk_css_provider_load_from_path(cssProvider, {\cf22 "css/style.css"}, NULL);\par
182     gtk_style_context_add_provider_for_screen(gdk_screen_get_default(),\par
183                                               GTK_STYLE_PROVIDER(cssProvider),\par
184                                               GTK_STYLE_PROVIDER_PRIORITY_USER);\par
185     g_object_unref(cssProvider);\par
186 \par
187     criarLista(&lista);\par
188     criarFila(&fila, 5);\par
189 \par
190     {\cf20 /* ===== JANELA INICIAL ===== */}\par
191     initial_window = gtk_window_new(GTK_WINDOW_TOPLEVEL);\par
192     gtk_window_set_title(GTK_WINDOW(initial_window), {\cf22 "Bem-vindo"});\par
193     gtk_container_set_border_width(GTK_CONTAINER(initial_window), 10);\par
194     gtk_window_set_default_size(GTK_WINDOW(initial_window), 600, 400);\par
195     gtk_widget_set_name(initial_window, {\cf22 "welcome-window"});\par
196     {\cf20 // Conecta o sinal "delete-event" para encerrar a aplica\'E7\'E3o ao fechar a janela}\par
197     g_signal_connect(initial_window, {\cf22 "delete-event"}, G_CALLBACK(gtk_main_quit), NULL);\par
198 \par
199     GtkWidget *init_vbox = gtk_box_new(GTK_ORIENTATION_VERTICAL, 5);\par
200     gtk_container_add(GTK_CONTAINER(initial_window), init_vbox);\par
201 \par
202     GtkWidget *welcome_label = gtk_label_new({\cf22 "<b>Bem-vindo a sua To Do List</b>"});\par
203     gtk_label_set_use_markup(GTK_LABEL(welcome_label), TRUE);\par
204     gtk_box_pack_start(GTK_BOX(init_vbox), welcome_label, FALSE, FALSE, 0);\par
205 \par
206     {\cf20 // Carrega e redimensiona a imagem de boas-vindas}\par
207     GError *error = NULL;\par
208     GdkPixbuf *pixbuf = gdk_pixbuf_new_from_file({\cf22 "imagem/check-list.png"}, &error);\par
209     GtkWidget *welcome_image;\par
210     {\cf19 if} (!pixbuf) \{\par
211         g_warning({\cf22 "Erro ao carregar imagem: %s"}, error->message);\par
212         welcome_image = gtk_image_new();\par
213         g_error_free(error);\par
214     \} {\cf19 else} \{\par
215         {\cf18 int} orig_width = gdk_pixbuf_get_width(pixbuf);\par
216         {\cf18 int} orig_height = gdk_pixbuf_get_height(pixbuf);\par
217         {\cf18 int} new_width = 200;\par
218         {\cf18 int} new_height = orig_height * new_width / orig_width;\par
219         GdkPixbuf *scaled_pixbuf = gdk_pixbuf_scale_simple(pixbuf, new_width, new_height, GDK_INTERP_BILINEAR);\par
220         welcome_image = gtk_image_new_from_pixbuf(scaled_pixbuf);\par
221         g_object_unref(pixbuf);\par
222         g_object_unref(scaled_pixbuf);\par
223     \}\par
224     gtk_box_pack_start(GTK_BOX(init_vbox), welcome_image, TRUE, TRUE, 0);\par
225 \par
226     {\cf20 // Bot\'F5es "Entrar" e "Sair" na janela inicial}\par
227     GtkWidget *hbox_buttons = gtk_box_new(GTK_ORIENTATION_HORIZONTAL, 5);\par
228     gtk_box_pack_start(GTK_BOX(init_vbox), hbox_buttons, FALSE, FALSE, 0);\par
229     GtkWidget *btn_entrar = gtk_button_new_with_label({\cf22 "Entrar"});\par
230     GtkWidget *btn_sair   = gtk_button_new_with_label({\cf22 "Sair"});\par
231     gtk_box_pack_start(GTK_BOX(hbox_buttons), btn_entrar, TRUE, TRUE, 0);\par
232     gtk_box_pack_start(GTK_BOX(hbox_buttons), btn_sair, TRUE, TRUE, 0);\par
233     g_signal_connect(initial_window, {\cf22 "destroy"}, G_CALLBACK(gtk_main_quit), NULL);\par
234     g_signal_connect(btn_sair, {\cf22 "clicked"}, G_CALLBACK(gtk_main_quit), NULL);\par
235     g_signal_connect(btn_entrar, {\cf22 "clicked"}, G_CALLBACK(on_entrar_clicked), NULL);\par
236 \par
237     {\cf20 /* ===== JANELA PRINCIPAL (To Do List) ===== */}\par
238     main_window = gtk_window_new(GTK_WINDOW_TOPLEVEL);\par
239     gtk_window_set_title(GTK_WINDOW(main_window), {\cf22 "To Do List"});\par
240     gtk_container_set_border_width(GTK_CONTAINER(main_window), 10);\par
241     gtk_window_set_default_size(GTK_WINDOW(main_window), 800, 600);\par
242     gtk_widget_set_name(main_window, {\cf22 "main-window"});\par
243     {\cf20 // Conecta o sinal "delete-event" para encerrar a aplica\'E7\'E3o ao fechar a janela}\par
244     g_signal_connect(main_window, {\cf22 "delete-event"}, G_CALLBACK(gtk_main_quit), NULL);\par
245 \par
246     GtkWidget *main_vbox = gtk_box_new(GTK_ORIENTATION_VERTICAL, 5);\par
247     gtk_container_add(GTK_CONTAINER(main_window), main_vbox);\par
248 \par
249     GtkWidget *label_title = gtk_label_new({\cf22 "<b>To Do List</b>"});\par
250     gtk_label_set_use_markup(GTK_LABEL(label_title), TRUE);\par
251     gtk_style_context_add_class(gtk_widget_get_style_context(label_title), {\cf22 "title"});\par
252     gtk_box_pack_start(GTK_BOX(main_vbox), label_title, FALSE, FALSE, 0);\par
253 \par
254     {\cf20 // Campos de entrada para nova tarefa}\par
255     GtkWidget *label_task_title = gtk_label_new({\cf22 "T\'EDtulo da Tarefa:"});\par
256     gtk_box_pack_start(GTK_BOX(main_vbox), label_task_title, FALSE, FALSE, 0);\par
257     entry_title = gtk_entry_new();\par
258     gtk_box_pack_start(GTK_BOX(main_vbox), entry_title, FALSE, FALSE, 0);\par
259 \par
260     GtkWidget *label_task = gtk_label_new({\cf22 "Descri\'E7\'E3o da Tarefa:"});\par
261     gtk_box_pack_start(GTK_BOX(main_vbox), label_task, FALSE, FALSE, 0);\par
262     entry_task = gtk_entry_new();\par
263     gtk_box_pack_start(GTK_BOX(main_vbox), entry_task, FALSE, FALSE, 0);\par
264 \par
265     GtkWidget *label_time = gtk_label_new({\cf22 "Hora (HH:MM):"});\par
266     gtk_box_pack_start(GTK_BOX(main_vbox), label_time, FALSE, FALSE, 0);\par
267     entry_hour_minute = gtk_entry_new();\par
268     gtk_box_pack_start(GTK_BOX(main_vbox), entry_hour_minute, FALSE, FALSE, 0);\par
269 \par
270     {\cf20 // Bot\'E3o para adicionar a tarefa}\par
271     GtkWidget *btn_add = gtk_button_new_with_label({\cf22 "Adicionar Tarefa"});\par
272     g_signal_connect(btn_add, {\cf22 "clicked"}, G_CALLBACK(adicionar), NULL);\par
273     gtk_box_pack_start(GTK_BOX(main_vbox), btn_add, FALSE, FALSE, 0);\par
274 \par
275     {\cf20 // Adiciona um r\'F3tulo "Tarefas Pendentes:" antes do list_box}\par
276     GtkWidget *label_pendentes = gtk_label_new({\cf22 "<b>Tarefas Pendentes:</b>"});\par
277     gtk_label_set_use_markup(GTK_LABEL(label_pendentes), TRUE);\par
278     gtk_box_pack_start(GTK_BOX(main_vbox), label_pendentes, FALSE, FALSE, 0);\par
279 \par
280     GtkWidget *label_explicao = gtk_label_new({\cf22 "<b>Clique nelas para remover, concluir e ver mais detalhes</b>"});\par
281     gtk_label_set_use_markup(GTK_LABEL(label_explicao), TRUE);\par
282     gtk_box_pack_start(GTK_BOX(main_vbox), label_explicao, FALSE, FALSE, 0);\par
283 \par
284     {\cf20 // Cria o GtkListBox para exibir os t\'EDtulos das tarefas pendentes}\par
285     list_box = gtk_list_box_new();\par
286     gtk_box_pack_start(GTK_BOX(main_vbox), list_box, TRUE, TRUE, 0);\par
287     g_signal_connect(list_box, {\cf22 "row-activated"}, G_CALLBACK(on_task_row_activated), NULL);\par
288 \par
289     {\cf20 // Bot\'E3o para visualizar as tarefas conclu\'EDdas}\par
290     GtkWidget *btn_ver_concluidas = gtk_button_new_with_label({\cf22 "Ver Tarefas Conclu\'EDdas"});\par
291     g_signal_connect(btn_ver_concluidas, {\cf22 "clicked"}, G_CALLBACK(on_ver_concluidas_clicked), NULL);\par
292     gtk_box_pack_start(GTK_BOX(main_vbox), btn_ver_concluidas, FALSE, FALSE, 0);\par
293 \par
294     {\cf20 // Bot\'E3o para voltar \'E0 janela inicial}\par
295     GtkWidget *btn_voltar = gtk_button_new_with_label({\cf22 "Voltar para P\'E1gina Inicial"});\par
296     g_signal_connect(btn_voltar, {\cf22 "clicked"}, G_CALLBACK(on_voltar_clicked), NULL);\par
297     gtk_box_pack_start(GTK_BOX(main_vbox), btn_voltar, FALSE, FALSE, 0);\par
298 \par
299     gtk_widget_show_all(initial_window);\par
300     gtk_main();\par
301 \par
302     deletarLista(&lista);\par
303     destruirFila(&fila);\par
304     {\cf19 return} 0;\par
305 \}\par
}
}
{\xe \v mostrar_erro\:main.c}
{\xe \v main.c\:mostrar_erro}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void mostrar_erro (const gchar * mensagem)}}
\par
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 19                                          \{\par
20     GtkWidget *dialog = gtk_message_dialog_new(NULL, GTK_DIALOG_MODAL,\par
21                                                  GTK_MESSAGE_ERROR, GTK_BUTTONS_OK, {\cf22 "%s"}, mensagem);\par
22     gtk_dialog_run(GTK_DIALOG(dialog));\par
23     gtk_widget_destroy(dialog);\par
24 \}\par
}
}
{\xe \v on_entrar_clicked\:main.c}
{\xe \v main.c\:on_entrar_clicked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void on_entrar_clicked (GtkWidget * widget, gpointer data)}}
\par
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 166                                                          \{\par
167     gtk_widget_hide(initial_window);\par
168     gtk_widget_show_all(main_window);\par
169 \}\par
}
}
{\xe \v on_task_row_activated\:main.c}
{\xe \v main.c\:on_task_row_activated}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void on_task_row_activated (GtkListBox * box, GtkListBoxRow * row, gpointer user_data)}}
\par
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 86                                                                                     \{\par
87     {\cf20 // Obt\'E9m o \'EDndice (base 0) da linha clicada e converte para \'EDndice (base 1)}\par
88     {\cf18 int} index = gtk_list_box_row_get_index(row) + 1;\par
89 \par
90     {\cf20 // Percorre a lista at\'E9 chegar \'E0 tarefa correspondente}\par
91     Node *temp = lista.sent->prox;\par
92     {\cf19 for} ({\cf18 int} i = 1; i < index; i++)\par
93         temp = temp->prox;\par
94 \par
95     {\cf20 // Cria um di\'E1logo para exibir os detalhes da tarefa}\par
96     GtkWidget *dialog = gtk_dialog_new_with_buttons({\cf22 "Detalhes da Tarefa"},\par
97                                                     GTK_WINDOW(main_window),\par
98                                                     GTK_DIALOG_MODAL | GTK_DIALOG_DESTROY_WITH_PARENT,\par
99                                                     {\cf22 "_Excluir"}, GTK_RESPONSE_REJECT,\par
100                                                     {\cf22 "_Concluir"}, GTK_RESPONSE_ACCEPT,\par
101                                                     {\cf22 "_Cancelar"}, GTK_RESPONSE_CANCEL,\par
102                                                     NULL);\par
103     GtkWidget *content_area = gtk_dialog_get_content_area(GTK_DIALOG(dialog));\par
104     gchar *info = g_strdup_printf({\cf22 "Detalhes:\\n%s\\nHor\'E1rio: %02d:%02d"},\par
105                                   temp->task, temp->time[0], temp->time[1]);\par
106     GtkWidget *label = gtk_label_new(info);\par
107     gtk_box_pack_start(GTK_BOX(content_area), label, TRUE, TRUE, 10);\par
108     gtk_widget_show_all(dialog);\par
109     g_free(info);\par
110 \par
111     {\cf18 int} response = gtk_dialog_run(GTK_DIALOG(dialog));\par
112     {\cf19 if} (response == GTK_RESPONSE_REJECT) \{ {\cf20 // Excluir a tarefa}\par
113         removerM(&lista, index);\par
114     \} {\cf19 else} {\cf19 if} (response == GTK_RESPONSE_ACCEPT) \{ {\cf20 // Concluir a tarefa}\par
115         Item item = copiarItem(&lista, index);\par
116         removerM(&lista, index);\par
117         enfileirar(&fila, g_strdup(item.task), item.time[0], item.time[1]);\par
118     \}\par
119     gtk_widget_destroy(dialog);\par
120     atualizar_lista_box();\par
121 \}\par
}
}
{\xe \v on_ver_concluidas_clicked\:main.c}
{\xe \v main.c\:on_ver_concluidas_clicked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void on_ver_concluidas_clicked (GtkWidget * widget, gpointer data)}}
\par
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 124                                                                  \{\par
125     GtkWidget *dialog = gtk_dialog_new_with_buttons({\cf22 "Tarefas Conclu\'EDdas"},\par
126                                                     GTK_WINDOW(main_window),\par
127                                                     GTK_DIALOG_MODAL | GTK_DIALOG_DESTROY_WITH_PARENT,\par
128                                                     {\cf22 "_OK"}, GTK_RESPONSE_OK,\par
129                                                     NULL);\par
130     {\cf20 // Aumenta o tamanho da janela de tarefas conclu\'EDdas}\par
131     gtk_window_set_default_size(GTK_WINDOW(dialog), 600, 400);\par
132 \par
133     GtkWidget *content_area = gtk_dialog_get_content_area(GTK_DIALOG(dialog));\par
134 \par
135     {\cf20 // Cria uma janela rol\'E1vel e um GtkListBox para listar as tarefas conclu\'EDdas}\par
136     GtkWidget *scrolled = gtk_scrolled_window_new(NULL, NULL);\par
137     gtk_scrolled_window_set_policy(GTK_SCROLLED_WINDOW(scrolled), GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);\par
138     gtk_box_pack_start(GTK_BOX(content_area), scrolled, TRUE, TRUE, 10);\par
139 \par
140     GtkWidget *concluded_list_box = gtk_list_box_new();\par
141     gtk_container_add(GTK_CONTAINER(scrolled), concluded_list_box);\par
142 \par
143     {\cf19 for} ({\cf18 int} i = 0; i < fila.size; i++) \{\par
144          {\cf18 int} idx = (fila.ini + i) % fila.capacidade;\par
145          gchar *task_info = g_strdup_printf({\cf22 "%d) %s - %02d:%02d"}, i+1, fila.itens[idx].task,\par
146                                             fila.itens[idx].time[0], fila.itens[idx].time[1]);\par
147          GtkWidget *row = gtk_list_box_row_new();\par
148          GtkWidget *label = gtk_label_new(task_info);\par
149          {\cf20 // Define margens para um melhor espa\'E7amento}\par
150          gtk_widget_set_margin_start(label, 10);\par
151          gtk_widget_set_margin_end(label, 10);\par
152          gtk_widget_set_margin_top(label, 5);\par
153          gtk_widget_set_margin_bottom(label, 5);\par
154          gtk_container_add(GTK_CONTAINER(row), label);\par
155          gtk_list_box_insert(GTK_LIST_BOX(concluded_list_box), row, -1);\par
156          gtk_widget_show_all(row);\par
157          g_free(task_info);\par
158     \}\par
159 \par
160     gtk_widget_show_all(dialog);\par
161     gtk_dialog_run(GTK_DIALOG(dialog));\par
162     gtk_widget_destroy(dialog);\par
163 \}\par
}
}
{\xe \v on_voltar_clicked\:main.c}
{\xe \v main.c\:on_voltar_clicked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void on_voltar_clicked (GtkWidget * widget, gpointer data)}}
\par
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 171                                                          \{\par
172     gtk_widget_hide(main_window);\par
173     gtk_widget_show_all(initial_window);\par
174 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 
{\xe \v entry_hour_minute\:main.c}
{\xe \v main.c\:entry_hour_minute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GtkWidget* entry_hour_minute}}
\par
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v entry_task\:main.c}
{\xe \v main.c\:entry_task}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GtkWidget* entry_task}}
\par
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v entry_title\:main.c}
{\xe \v main.c\:entry_title}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GtkWidget* entry_title}}
\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v fila\:main.c}
{\xe \v main.c\:fila}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Fila} fila}}
\par
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v initial_window\:main.c}
{\xe \v main.c\:initial_window}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GtkWidget* initial_window}}
\par
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v list_box\:main.c}
{\xe \v main.c\:list_box}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GtkWidget* list_box}}
\par
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v lista\:main.c}
{\xe \v main.c\:lista}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Lista} lista}}
\par
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v main_window\:main.c}
{\xe \v main.c\:main_window}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GtkWidget* main_window}}
\par
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo C:/Users/Vinicius Souza/Downloads/projeto-ED/README.md\par \pard\plain 
{\tc\tcl2 \v C:/Users/Vinicius Souza/Downloads/projeto-ED/README.md}
{\xe \v C:/Users/Vinicius Souza/Downloads/projeto-ED/README.md}
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Sum\'E1rio\par 
\pard\plain 
{\tc \v Sum\'E1rio}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
